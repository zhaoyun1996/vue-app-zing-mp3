{"remainingRequest":"E:\\Project\\AppZingMP3\\vue-app-zing-mp3\\node_modules\\babel-loader\\lib\\index.js!E:\\Project\\AppZingMP3\\vue-app-zing-mp3\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Project\\AppZingMP3\\vue-app-zing-mp3\\src\\assets\\script\\ZingMp3.js","dependencies":[{"path":"E:\\Project\\AppZingMP3\\vue-app-zing-mp3\\src\\assets\\script\\ZingMp3.js","mtime":1607187852011},{"path":"E:\\Project\\AppZingMP3\\vue-app-zing-mp3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Project\\AppZingMP3\\vue-app-zing-mp3\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\Project\\AppZingMP3\\vue-app-zing-mp3\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdCIpOwoKdmFyIF9vYmplY3RTcHJlYWQgPSByZXF1aXJlKCJFOi9Qcm9qZWN0L0FwcFppbmdNUDMvdnVlLWFwcC16aW5nLW1wMy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9vYmplY3RTcHJlYWQyIik7Cgp2YXIgX2NsYXNzQ2FsbENoZWNrID0gcmVxdWlyZSgiRTovUHJvamVjdC9BcHBaaW5nTVAzL3Z1ZS1hcHAtemluZy1tcDMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2siKTsKCnZhciBfY3JlYXRlQ2xhc3MgPSByZXF1aXJlKCJFOi9Qcm9qZWN0L0FwcFppbmdNUDMvdnVlLWFwcC16aW5nLW1wMy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyIpOwoKdmFyIHJlcXVlc3QgPSByZXF1aXJlKCdyZXF1ZXN0LXByb21pc2UnKTsKCnZhciBlbmNyeXB0ID0gcmVxdWlyZSgnLi9lbmNyeXB0Jyk7Cgp2YXIgQVBJX0tFWSA9ICczOGU4NjQzZmIwZGMwNGU4ZDY1Yjk5OTk0ZDNkYWZmZic7CnZhciBTRVJDUkVUX0tFWSA9ICcxMGEwMWRjZjMzNzYyZDNhMjA0Y2I5NjQyOTkxOGZmNic7CnZhciBVUkxfQVBJID0gWydodHRwczovL3ppbmdtcDMudm4vYXBpJywgJ2h0dHBzOi8vYmV0YS56aW5nbXAzLnZuJ107CnJlcXVlc3QgPSByZXF1ZXN0LmRlZmF1bHRzKHsKICBxczogewogICAgYXBpX2tleTogQVBJX0tFWSwKICAgIGFwaUtleTogQVBJX0tFWQogIH0sCiAgZ3ppcDogdHJ1ZSwKICBqc29uOiB0cnVlCn0pOwoKdmFyIFppbmdNcDMgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICJ1c2Ugc3RyaWN0IjsKCiAgZnVuY3Rpb24gWmluZ01wMygpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBaaW5nTXAzKTsKICB9CgogIF9jcmVhdGVDbGFzcyhaaW5nTXAzLCBudWxsLCBbewogICAga2V5OiAicmVxdWVzdFppbmciLAogICAgLy8gc3RhdGljIGdldEZ1bGxJbmZvKGlkKXsKICAgIC8vICAgICByZXR1cm4gbmV3IFByb21pc2UoYXN5bmMocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAvLyAgICAgICAgIHRyeSB7CiAgICAvLyAgICAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgUHJvbWlzZS5hbGwoW3RoaXMuZ2V0U29uZ0luZm8oaWQpLCB0aGlzLmdldFN0cmVhbWluZyhpZCldKTsKICAgIC8vICAgICAgICAgICAgIGNvbnN0IGluZm9Tb25nID0gZGF0YVswXS5kYXRhOwogICAgLy8gICAgICAgICAgICAgbGV0IHJlcyA9IHsKICAgIC8vICAgICAgICAgICAgICAgICBpZCwKICAgIC8vICAgICAgICAgICAgICAgICB0aXRsZTogaW5mb1NvbmcudGl0bGUsCiAgICAvLyAgICAgICAgICAgICAgICAgYXJ0aXN0c19uYW1lczogaW5mb1NvbmcuYXJ0aXN0c19uYW1lcywKICAgIC8vICAgICAgICAgICAgICAgICB0aHVtYm5haWw6IGluZm9Tb25nLnRodW1ibmFpbF9tZWRpdW0sCiAgICAvLyAgICAgICAgICAgICAgICAgbHlyaWM6IGluZm9Tb25nLmx5cmljLAogICAgLy8gICAgICAgICAgICAgICAgIHN0cmVhbWluZzogZGF0YVsxXS5kYXRhCiAgICAvLyAgICAgICAgICAgICB9OwogICAgLy8gICAgICAgICAgICAgcmVzb2x2ZShyZXMpOwogICAgLy8gICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgLy8gICAgICAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgIC8vICAgICAgICAgfQogICAgLy8gICAgIH0pOwogICAgLy8gfQogICAgLy8gc3RhdGljIGdldEluZm9EZXRhaWwoaWQpIHsKICAgIC8vICAgICByZXR1cm4gbmV3IFByb21pc2UoYXN5bmMgKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgLy8gICAgICAgICBjb25zdCBvcHRpb24gPSB7CiAgICAvLyAgICAgICAgICAgICBuYW1lQVBJOiAnL3NvbmcvZ2V0LXNvbmctZGV0YWlsJywKICAgIC8vICAgICAgICAgICAgIHR5cGVBcGk6IDAsCiAgICAvLyAgICAgICAgICAgICBxczogewogICAgLy8gICAgICAgICAgICAgICAgIGlkCiAgICAvLyAgICAgICAgICAgICB9LAogICAgLy8gICAgICAgICAgICAgcGFyYW06ICdpZD0nICsgaWQKICAgIC8vICAgICAgICAgfTsKICAgIC8vICAgICAgICAgdHJ5IHsKICAgIC8vICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnJlcXVlc3RaaW5nKG9wdGlvbik7CiAgICAvLyAgICAgICAgICAgICBpZiAoZGF0YS5lcnIpIHJlamVjdChkYXRhKTsKICAgIC8vICAgICAgICAgICAgIHJlc29sdmUoZGF0YSk7CiAgICAvLyAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAvLyAgICAgICAgICAgICByZWplY3QoZXJyb3IpOwogICAgLy8gICAgICAgICB9CiAgICAvLyAgICAgfSkKICAgIC8vIH0KICAgIC8vIHN0YXRpYyBnZXRTb25nSW5mbyhpZCkgewogICAgLy8gICAgIHJldHVybiBuZXcgUHJvbWlzZShhc3luYyAocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAvLyAgICAgICAgIGNvbnN0IG9wdGlvbiA9IHsKICAgIC8vICAgICAgICAgICAgIG5hbWVBUEk6ICcvc29uZy9nZXQtc29uZy1pbmZvJywKICAgIC8vICAgICAgICAgICAgIHR5cGVBcGk6IDAsCiAgICAvLyAgICAgICAgICAgICBxczogewogICAgLy8gICAgICAgICAgICAgICAgIGlkCiAgICAvLyAgICAgICAgICAgICB9LAogICAgLy8gICAgICAgICAgICAgcGFyYW06ICdpZD0nICsgaWQKICAgIC8vICAgICAgICAgfTsKICAgIC8vICAgICAgICAgdHJ5IHsKICAgIC8vICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnJlcXVlc3RaaW5nKG9wdGlvbik7CiAgICAvLyAgICAgICAgICAgICBpZiAoZGF0YS5lcnIpIHJlamVjdChkYXRhKTsKICAgIC8vICAgICAgICAgICAgIHJlc29sdmUoZGF0YSk7CiAgICAvLyAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAvLyAgICAgICAgICAgICByZWplY3QoZXJyb3IpOwogICAgLy8gICAgICAgICB9CiAgICAvLyAgICAgfSkKICAgIC8vIH0KICAgIC8vIHN0YXRpYyBnZXRTdHJlYW1pbmcoaWQpIHsKICAgIC8vICAgICByZXR1cm4gbmV3IFByb21pc2UoYXN5bmMgKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgLy8gICAgICAgICBjb25zdCBvcHRpb24gPSB7CiAgICAvLyAgICAgICAgICAgICBuYW1lQVBJOiAnL2FwaS92Mi9zb25nL2dldFN0cmVhbWluZycsCiAgICAvLyAgICAgICAgICAgICB0eXBlQXBpOiAxLAogICAgLy8gICAgICAgICAgICAgcXM6IHsKICAgIC8vICAgICAgICAgICAgICAgICBpZAogICAgLy8gICAgICAgICAgICAgfSwKICAgIC8vICAgICAgICAgICAgIHBhcmFtOiAnaWQ9JyArIGlkCiAgICAvLyAgICAgICAgIH07CiAgICAvLyAgICAgICAgIHRyeSB7CiAgICAvLyAgICAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5yZXF1ZXN0WmluZyhvcHRpb24pOwogICAgLy8gICAgICAgICAgICAgaWYgKGRhdGEuZXJyKSByZWplY3QoZGF0YSk7CiAgICAvLyAgICAgICAgICAgICByZXNvbHZlKGRhdGEpOwogICAgLy8gICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgLy8gICAgICAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgIC8vICAgICAgICAgfQogICAgLy8gICAgIH0pCiAgICAvLyB9CiAgICB2YWx1ZTogZnVuY3Rpb24gcmVxdWVzdFppbmcoX3JlZikgewogICAgICB2YXIgbmFtZUFQSSA9IF9yZWYubmFtZUFQSSwKICAgICAgICAgIHR5cGVBcGkgPSBfcmVmLnR5cGVBcGksCiAgICAgICAgICBwYXJhbSA9IF9yZWYucGFyYW0sCiAgICAgICAgICBxcyA9IF9yZWYucXM7CiAgICAgIHZhciBzaWcgPSB0aGlzLmhhc2hQYXJhbShuYW1lQVBJLCBwYXJhbSk7CiAgICAgIHJldHVybiByZXF1ZXN0KHsKICAgICAgICB1cmk6IFVSTF9BUElbdHlwZUFwaV0gKyBuYW1lQVBJLAogICAgICAgIHFzOiBfb2JqZWN0U3ByZWFkKHsKICAgICAgICAgIGN0aW1lOiB0aGlzLnRpbWUsCiAgICAgICAgICBzaWc6IHNpZwogICAgICAgIH0sIHFzKQogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJoYXNoUGFyYW0iLAogICAgdmFsdWU6IGZ1bmN0aW9uIGhhc2hQYXJhbShuYW1lQVBJKSB7CiAgICAgIHZhciBwYXJhbSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogJyc7CiAgICAgIHRoaXMudGltZSA9IE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDEwMDApOwogICAgICB2YXIgaGFzaDI1NiA9IGVuY3J5cHQuZ2V0SGFzaDI1NigiY3RpbWU9Ii5jb25jYXQodGhpcy50aW1lKS5jb25jYXQocGFyYW0pKTsKICAgICAgcmV0dXJuIGVuY3J5cHQuZ2V0SG1hYzUxMihuYW1lQVBJICsgaGFzaDI1NiwgU0VSQ1JFVF9LRVkpOwogICAgfQogIH0sIHsKICAgIGtleTogImdldEZ1bGxJbmZvMSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0RnVsbEluZm8xKGlkKSB7CiAgICAgIHZhciBuYW1lQVBJID0gJy9zb25nL2dldC1zb25nLWRldGFpbCcsCiAgICAgICAgICB0eXBlQXBpID0gMCwKICAgICAgICAgIHFzID0gewogICAgICAgIGlkOiBpZAogICAgICB9LAogICAgICAgICAgcGFyYW0gPSAnaWQ9JyArIGlkOwogICAgICB2YXIgc2lnID0gdGhpcy5oYXNoUGFyYW0obmFtZUFQSSwgcGFyYW0pOwogICAgICByZXR1cm4gcmVxdWVzdCh7CiAgICAgICAgdXJpOiBVUkxfQVBJW3R5cGVBcGldICsgbmFtZUFQSSwKICAgICAgICBxczogX29iamVjdFNwcmVhZCh7CiAgICAgICAgICBjdGltZTogdGhpcy50aW1lLAogICAgICAgICAgc2lnOiBzaWcKICAgICAgICB9LCBxcykKICAgICAgfSk7CiAgICB9IC8vIHN0YXRpYyBnZXRSYW5kb21Kb2tlKCl7CiAgICAvLyAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgIC8vICAgICAgIGNvbnN0IHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsKICAgIC8vICAgICAgIHJlcXVlc3Qub3BlbignR0VUJywgJ2h0dHBzOi8vemluZ21wMy52bi9hcGkvc29uZy9nZXQtc29uZy1kZXRhaWw/YXBpX2tleT0zOGU4NjQzZmIwZGMwNGU4ZDY1Yjk5OTk0ZDNkYWZmZiZhcGlLZXk9MzhlODY0M2ZiMGRjMDRlOGQ2NWI5OTk5NGQzZGFmZmYmY3RpbWU9MTYwNzE4NzMxNSZzaWc9MTI3YWM0ZGNkZTM4ODRiMTc5YzJmZTI4YWJjY2JmNjk1YzIzMWUyNWEyZmU4OGMwMzhhZTAyNjY5OGQ0ZGMxNGFhNjNmOTFlYWIwNzVlNGJlYWUyZGJhODhlN2IyM2E2M2ZkZDlmNjYyNmQ1NzJlODRkNjljYTRiN2YzYmRjNjAmaWQ9WldFSVVBSUYnKTsKICAgIC8vICAgICAgIHJlcXVlc3Qub25sb2FkID0gKCkgPT4gewogICAgLy8gICAgICAgICBpZiAocmVxdWVzdC5zdGF0dXMgPT09IDIwMCkgewogICAgLy8gICAgICAgICAgIHJlc29sdmUocmVxdWVzdC5yZXNwb25zZSk7IC8vIHdlIGdvdCBkYXRhIGhlcmUsIHNvIHJlc29sdmUgdGhlIFByb21pc2UKICAgIC8vICAgICAgICAgfSBlbHNlIHsKICAgIC8vICAgICAgICAgICByZWplY3QoRXJyb3IocmVxdWVzdC5zdGF0dXNUZXh0KSk7IC8vIHN0YXR1cyBpcyBub3QgMjAwIE9LLCBzbyByZWplY3QKICAgIC8vICAgICAgICAgfQogICAgLy8gICAgICAgfTsKICAgIC8vICAgICAgIHJlcXVlc3Qub25lcnJvciA9ICgpID0+IHsKICAgIC8vICAgICAgICAgcmVqZWN0KEVycm9yKCdFcnJvciBmZXRjaGluZyBkYXRhLicpKTsgLy8gZXJyb3Igb2NjdXJyZWQsIHJlamVjdCB0aGUgIFByb21pc2UKICAgIC8vICAgICAgIH07CiAgICAvLyAgICAgICByZXF1ZXN0LnNlbmQoKTsgLy8gc2VuZCB0aGUgcmVxdWVzdAogICAgLy8gICAgIH0pOwogICAgLy8gICB9CgogIH1dKTsKCiAgcmV0dXJuIFppbmdNcDM7Cn0oKTsKCm1vZHVsZS5leHBvcnRzID0gWmluZ01wMzs="},{"version":3,"sources":["E:/Project/AppZingMP3/vue-app-zing-mp3/src/assets/script/ZingMp3.js"],"names":["request","require","encrypt","API_KEY","SERCRET_KEY","URL_API","defaults","qs","api_key","apiKey","gzip","json","ZingMp3","nameAPI","typeApi","param","sig","hashParam","uri","ctime","time","Math","floor","Date","now","hash256","getHash256","getHmac512","id","module","exports"],"mappings":";;;;;;;;AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,iBAAD,CAArB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAAvB;;AAEA,IAAME,OAAO,GAAG,kCAAhB;AACA,IAAMC,WAAW,GAAG,kCAApB;AACA,IAAMC,OAAO,GAAG,CACZ,wBADY,EAEZ,yBAFY,CAAhB;AAKAL,OAAO,GAAGA,OAAO,CAACM,QAAR,CAAiB;AACvBC,EAAAA,EAAE,EAAE;AACAC,IAAAA,OAAO,EAAEL,OADT;AAEAM,IAAAA,MAAM,EAAEN;AAFR,GADmB;AAKvBO,EAAAA,IAAI,EAAE,IALiB;AAMvBC,EAAAA,IAAI,EAAE;AANiB,CAAjB,CAAV;;IASMC,O;;;;;;;;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;sCAGA;AAAA,UADoBC,OACpB,QADoBA,OACpB;AAAA,UAD6BC,OAC7B,QAD6BA,OAC7B;AAAA,UADsCC,KACtC,QADsCA,KACtC;AAAA,UAD6CR,EAC7C,QAD6CA,EAC7C;AAEI,UAAIS,GAAG,GAAG,KAAKC,SAAL,CAAeJ,OAAf,EAAwBE,KAAxB,CAAV;AACA,aAAOf,OAAO,CAAC;AACXkB,QAAAA,GAAG,EAAEb,OAAO,CAACS,OAAD,CAAP,GAAmBD,OADb;AAEXN,QAAAA,EAAE;AACEY,UAAAA,KAAK,EAAE,KAAKC,IADd;AAEEJ,UAAAA,GAAG,EAAHA;AAFF,WAGKT,EAHL;AAFS,OAAD,CAAd;AAQH;;;8BAEgBM,O,EACjB;AAAA,UAD0BE,KAC1B,uEADkC,EAClC;AACI,WAAKK,IAAL,GAAYC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,GAAL,KAAa,IAAxB,CAAZ;AACA,UAAMC,OAAO,GAAGvB,OAAO,CAACwB,UAAR,iBAA4B,KAAKN,IAAjC,SAAwCL,KAAxC,EAAhB;AACA,aAAOb,OAAO,CAACyB,UAAR,CAAmBd,OAAO,GAAGY,OAA7B,EAAsCrB,WAAtC,CAAP;AACH;;;iCAEmBwB,E,EAAG;AACnB,UACIf,OAAO,GAAG,uBADd;AAAA,UAEIC,OAAO,GAAG,CAFd;AAAA,UAGIP,EAAE,GAAG;AACDqB,QAAAA,EAAE,EAAFA;AADC,OAHT;AAAA,UAMIb,KAAK,GAAG,QAAQa,EANpB;AAQA,UAAIZ,GAAG,GAAG,KAAKC,SAAL,CAAeJ,OAAf,EAAwBE,KAAxB,CAAV;AACA,aAAOf,OAAO,CAAC;AACXkB,QAAAA,GAAG,EAAEb,OAAO,CAACS,OAAD,CAAP,GAAmBD,OADb;AAEXN,QAAAA,EAAE;AACEY,UAAAA,KAAK,EAAE,KAAKC,IADd;AAEEJ,UAAAA,GAAG,EAAHA;AAFF,WAGKT,EAHL;AAFS,OAAD,CAAd;AAQH,K,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;;;AAGJsB,MAAM,CAACC,OAAP,GAAiBlB,OAAjB","sourcesContent":["let request = require('request-promise');\nconst encrypt = require('./encrypt');\n\nconst API_KEY = '38e8643fb0dc04e8d65b99994d3dafff';\nconst SERCRET_KEY = '10a01dcf33762d3a204cb96429918ff6';\nconst URL_API = [\n    'https://zingmp3.vn/api',\n    'https://beta.zingmp3.vn'\n];\n\nrequest = request.defaults({\n    qs: {\n        api_key: API_KEY,\n        apiKey: API_KEY\n    },\n    gzip: true,\n    json: true\n});\n\nclass ZingMp3 {\n\n    // static getFullInfo(id){\n    //     return new Promise(async(resolve, reject) => {\n    //         try {\n    //             const data = await Promise.all([this.getSongInfo(id), this.getStreaming(id)]);\n    //             const infoSong = data[0].data;\n    //             let res = {\n    //                 id,\n    //                 title: infoSong.title,\n    //                 artists_names: infoSong.artists_names,\n    //                 thumbnail: infoSong.thumbnail_medium,\n    //                 lyric: infoSong.lyric,\n    //                 streaming: data[1].data\n    //             };\n    //             resolve(res);\n    //         } catch (error) {\n    //             reject(error);\n    //         }\n    //     });\n    // }\n\n    // static getInfoDetail(id) {\n    //     return new Promise(async (resolve, reject) => {\n    //         const option = {\n    //             nameAPI: '/song/get-song-detail',\n    //             typeApi: 0,\n    //             qs: {\n    //                 id\n    //             },\n    //             param: 'id=' + id\n    //         };\n\n    //         try {\n    //             const data = await this.requestZing(option);\n    //             if (data.err) reject(data);\n    //             resolve(data);\n    //         } catch (error) {\n    //             reject(error);\n    //         }\n    //     })\n    // }\n\n    // static getSongInfo(id) {\n    //     return new Promise(async (resolve, reject) => {\n\n    //         const option = {\n    //             nameAPI: '/song/get-song-info',\n    //             typeApi: 0,\n    //             qs: {\n    //                 id\n    //             },\n    //             param: 'id=' + id\n    //         };\n\n    //         try {\n    //             const data = await this.requestZing(option);\n    //             if (data.err) reject(data);\n    //             resolve(data);\n    //         } catch (error) {\n    //             reject(error);\n    //         }\n    //     })\n    // }\n\n    // static getStreaming(id) {\n    //     return new Promise(async (resolve, reject) => {\n\n    //         const option = {\n    //             nameAPI: '/api/v2/song/getStreaming',\n    //             typeApi: 1,\n    //             qs: {\n    //                 id\n    //             },\n    //             param: 'id=' + id\n    //         };\n\n    //         try {\n    //             const data = await this.requestZing(option);\n    //             if (data.err) reject(data);\n    //             resolve(data);\n    //         } catch (error) {\n    //             reject(error);\n    //         }\n    //     })\n    // }\n\n    static requestZing({nameAPI, typeApi, param, qs})\n    {\n        \n        let sig = this.hashParam(nameAPI, param);\n        return request({\n            uri: URL_API[typeApi] + nameAPI,\n            qs: {\n                ctime: this.time,\n                sig,\n                ...qs\n            }\n        });\n    }\n\n    static hashParam(nameAPI, param = '')\n    {\n        this.time = Math.floor(Date.now() / 1000);\n        const hash256 = encrypt.getHash256(`ctime=${this.time}${param}`);\n        return encrypt.getHmac512(nameAPI + hash256, SERCRET_KEY);\n    }\n\n    static getFullInfo1(id){\n        const \n            nameAPI = '/song/get-song-detail',\n            typeApi = 0,\n            qs = {\n                id\n            },\n            param = 'id=' + id;\n\n        let sig = this.hashParam(nameAPI, param);\n        return request({\n            uri: URL_API[typeApi] + nameAPI,\n            qs: {\n                ctime: this.time,\n                sig,\n                ...qs\n            }\n        });\n    }\n\n    // static getRandomJoke(){\n    //     return new Promise((resolve, reject) => {\n    //       const request = new XMLHttpRequest();\n      \n    //       request.open('GET', 'https://zingmp3.vn/api/song/get-song-detail?api_key=38e8643fb0dc04e8d65b99994d3dafff&apiKey=38e8643fb0dc04e8d65b99994d3dafff&ctime=1607187315&sig=127ac4dcde3884b179c2fe28abccbf695c231e25a2fe88c038ae026698d4dc14aa63f91eab075e4beae2dba88e7b23a63fdd9f6626d572e84d69ca4b7f3bdc60&id=ZWEIUAIF');\n    //       request.onload = () => {\n    //         if (request.status === 200) {\n    //           resolve(request.response); // we got data here, so resolve the Promise\n    //         } else {\n    //           reject(Error(request.statusText)); // status is not 200 OK, so reject\n    //         }\n    //       };\n      \n    //       request.onerror = () => {\n    //         reject(Error('Error fetching data.')); // error occurred, reject the  Promise\n    //       };\n      \n    //       request.send(); // send the request\n    //     });\n    //   }\n}\n\nmodule.exports = ZingMp3;"]}]}