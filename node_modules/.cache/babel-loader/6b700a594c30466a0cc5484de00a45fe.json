{"remainingRequest":"E:\\Project\\AppZingMP3\\vue-app-zing-mp3\\node_modules\\babel-loader\\lib\\index.js!E:\\Project\\AppZingMP3\\vue-app-zing-mp3\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\Project\\AppZingMP3\\vue-app-zing-mp3\\src\\assets\\script\\ZingMp3.js","dependencies":[{"path":"E:\\Project\\AppZingMP3\\vue-app-zing-mp3\\src\\assets\\script\\ZingMp3.js","mtime":1607187336850},{"path":"E:\\Project\\AppZingMP3\\vue-app-zing-mp3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Project\\AppZingMP3\\vue-app-zing-mp3\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\Project\\AppZingMP3\\vue-app-zing-mp3\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdCIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciKTsKCnZhciBfb2JqZWN0U3ByZWFkID0gcmVxdWlyZSgiRTovUHJvamVjdC9BcHBaaW5nTVAzL3Z1ZS1hcHAtemluZy1tcDMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvb2JqZWN0U3ByZWFkMiIpOwoKdmFyIF9jbGFzc0NhbGxDaGVjayA9IHJlcXVpcmUoIkU6L1Byb2plY3QvQXBwWmluZ01QMy92dWUtYXBwLXppbmctbXAzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIik7Cgp2YXIgX2NyZWF0ZUNsYXNzID0gcmVxdWlyZSgiRTovUHJvamVjdC9BcHBaaW5nTVAzL3Z1ZS1hcHAtemluZy1tcDMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MiKTsKCnZhciByZXF1ZXN0ID0gcmVxdWlyZSgncmVxdWVzdC1wcm9taXNlJyk7Cgp2YXIgZW5jcnlwdCA9IHJlcXVpcmUoJy4vZW5jcnlwdCcpOwoKdmFyIEFQSV9LRVkgPSAnMzhlODY0M2ZiMGRjMDRlOGQ2NWI5OTk5NGQzZGFmZmYnOwp2YXIgU0VSQ1JFVF9LRVkgPSAnMTBhMDFkY2YzMzc2MmQzYTIwNGNiOTY0Mjk5MThmZjYnOwp2YXIgVVJMX0FQSSA9IFsnaHR0cHM6Ly96aW5nbXAzLnZuL2FwaScsICdodHRwczovL2JldGEuemluZ21wMy52biddOwpyZXF1ZXN0ID0gcmVxdWVzdC5kZWZhdWx0cyh7CiAgcXM6IHsKICAgIGFwaV9rZXk6IEFQSV9LRVksCiAgICBhcGlLZXk6IEFQSV9LRVkKICB9LAogIGd6aXA6IHRydWUsCiAganNvbjogdHJ1ZQp9KTsKCnZhciBaaW5nTXAzID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAidXNlIHN0cmljdCI7CgogIGZ1bmN0aW9uIFppbmdNcDMoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgWmluZ01wMyk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoWmluZ01wMywgbnVsbCwgW3sKICAgIGtleTogInJlcXVlc3RaaW5nIiwKICAgIC8vIHN0YXRpYyBnZXRGdWxsSW5mbyhpZCl7CiAgICAvLyAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGFzeW5jKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgLy8gICAgICAgICB0cnkgewogICAgLy8gICAgICAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IFByb21pc2UuYWxsKFt0aGlzLmdldFNvbmdJbmZvKGlkKSwgdGhpcy5nZXRTdHJlYW1pbmcoaWQpXSk7CiAgICAvLyAgICAgICAgICAgICBjb25zdCBpbmZvU29uZyA9IGRhdGFbMF0uZGF0YTsKICAgIC8vICAgICAgICAgICAgIGxldCByZXMgPSB7CiAgICAvLyAgICAgICAgICAgICAgICAgaWQsCiAgICAvLyAgICAgICAgICAgICAgICAgdGl0bGU6IGluZm9Tb25nLnRpdGxlLAogICAgLy8gICAgICAgICAgICAgICAgIGFydGlzdHNfbmFtZXM6IGluZm9Tb25nLmFydGlzdHNfbmFtZXMsCiAgICAvLyAgICAgICAgICAgICAgICAgdGh1bWJuYWlsOiBpbmZvU29uZy50aHVtYm5haWxfbWVkaXVtLAogICAgLy8gICAgICAgICAgICAgICAgIGx5cmljOiBpbmZvU29uZy5seXJpYywKICAgIC8vICAgICAgICAgICAgICAgICBzdHJlYW1pbmc6IGRhdGFbMV0uZGF0YQogICAgLy8gICAgICAgICAgICAgfTsKICAgIC8vICAgICAgICAgICAgIHJlc29sdmUocmVzKTsKICAgIC8vICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgIC8vICAgICAgICAgICAgIHJlamVjdChlcnJvcik7CiAgICAvLyAgICAgICAgIH0KICAgIC8vICAgICB9KTsKICAgIC8vIH0KICAgIC8vIHN0YXRpYyBnZXRJbmZvRGV0YWlsKGlkKSB7CiAgICAvLyAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGFzeW5jIChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgIC8vICAgICAgICAgY29uc3Qgb3B0aW9uID0gewogICAgLy8gICAgICAgICAgICAgbmFtZUFQSTogJy9zb25nL2dldC1zb25nLWRldGFpbCcsCiAgICAvLyAgICAgICAgICAgICB0eXBlQXBpOiAwLAogICAgLy8gICAgICAgICAgICAgcXM6IHsKICAgIC8vICAgICAgICAgICAgICAgICBpZAogICAgLy8gICAgICAgICAgICAgfSwKICAgIC8vICAgICAgICAgICAgIHBhcmFtOiAnaWQ9JyArIGlkCiAgICAvLyAgICAgICAgIH07CiAgICAvLyAgICAgICAgIHRyeSB7CiAgICAvLyAgICAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5yZXF1ZXN0WmluZyhvcHRpb24pOwogICAgLy8gICAgICAgICAgICAgaWYgKGRhdGEuZXJyKSByZWplY3QoZGF0YSk7CiAgICAvLyAgICAgICAgICAgICByZXNvbHZlKGRhdGEpOwogICAgLy8gICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgLy8gICAgICAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgIC8vICAgICAgICAgfQogICAgLy8gICAgIH0pCiAgICAvLyB9CiAgICAvLyBzdGF0aWMgZ2V0U29uZ0luZm8oaWQpIHsKICAgIC8vICAgICByZXR1cm4gbmV3IFByb21pc2UoYXN5bmMgKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgLy8gICAgICAgICBjb25zdCBvcHRpb24gPSB7CiAgICAvLyAgICAgICAgICAgICBuYW1lQVBJOiAnL3NvbmcvZ2V0LXNvbmctaW5mbycsCiAgICAvLyAgICAgICAgICAgICB0eXBlQXBpOiAwLAogICAgLy8gICAgICAgICAgICAgcXM6IHsKICAgIC8vICAgICAgICAgICAgICAgICBpZAogICAgLy8gICAgICAgICAgICAgfSwKICAgIC8vICAgICAgICAgICAgIHBhcmFtOiAnaWQ9JyArIGlkCiAgICAvLyAgICAgICAgIH07CiAgICAvLyAgICAgICAgIHRyeSB7CiAgICAvLyAgICAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5yZXF1ZXN0WmluZyhvcHRpb24pOwogICAgLy8gICAgICAgICAgICAgaWYgKGRhdGEuZXJyKSByZWplY3QoZGF0YSk7CiAgICAvLyAgICAgICAgICAgICByZXNvbHZlKGRhdGEpOwogICAgLy8gICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgLy8gICAgICAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgIC8vICAgICAgICAgfQogICAgLy8gICAgIH0pCiAgICAvLyB9CiAgICAvLyBzdGF0aWMgZ2V0U3RyZWFtaW5nKGlkKSB7CiAgICAvLyAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGFzeW5jIChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgIC8vICAgICAgICAgY29uc3Qgb3B0aW9uID0gewogICAgLy8gICAgICAgICAgICAgbmFtZUFQSTogJy9hcGkvdjIvc29uZy9nZXRTdHJlYW1pbmcnLAogICAgLy8gICAgICAgICAgICAgdHlwZUFwaTogMSwKICAgIC8vICAgICAgICAgICAgIHFzOiB7CiAgICAvLyAgICAgICAgICAgICAgICAgaWQKICAgIC8vICAgICAgICAgICAgIH0sCiAgICAvLyAgICAgICAgICAgICBwYXJhbTogJ2lkPScgKyBpZAogICAgLy8gICAgICAgICB9OwogICAgLy8gICAgICAgICB0cnkgewogICAgLy8gICAgICAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMucmVxdWVzdFppbmcob3B0aW9uKTsKICAgIC8vICAgICAgICAgICAgIGlmIChkYXRhLmVycikgcmVqZWN0KGRhdGEpOwogICAgLy8gICAgICAgICAgICAgcmVzb2x2ZShkYXRhKTsKICAgIC8vICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgIC8vICAgICAgICAgICAgIHJlamVjdChlcnJvcik7CiAgICAvLyAgICAgICAgIH0KICAgIC8vICAgICB9KQogICAgLy8gfQogICAgdmFsdWU6IGZ1bmN0aW9uIHJlcXVlc3RaaW5nKF9yZWYpIHsKICAgICAgdmFyIG5hbWVBUEkgPSBfcmVmLm5hbWVBUEksCiAgICAgICAgICB0eXBlQXBpID0gX3JlZi50eXBlQXBpLAogICAgICAgICAgcGFyYW0gPSBfcmVmLnBhcmFtLAogICAgICAgICAgcXMgPSBfcmVmLnFzOwogICAgICB2YXIgc2lnID0gdGhpcy5oYXNoUGFyYW0obmFtZUFQSSwgcGFyYW0pOwogICAgICByZXR1cm4gcmVxdWVzdCh7CiAgICAgICAgdXJpOiBVUkxfQVBJW3R5cGVBcGldICsgbmFtZUFQSSwKICAgICAgICBxczogX29iamVjdFNwcmVhZCh7CiAgICAgICAgICBjdGltZTogdGhpcy50aW1lLAogICAgICAgICAgc2lnOiBzaWcKICAgICAgICB9LCBxcykKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiaGFzaFBhcmFtIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBoYXNoUGFyYW0obmFtZUFQSSkgewogICAgICB2YXIgcGFyYW0gPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICcnOwogICAgICB0aGlzLnRpbWUgPSBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKTsKICAgICAgdmFyIGhhc2gyNTYgPSBlbmNyeXB0LmdldEhhc2gyNTYoImN0aW1lPSIuY29uY2F0KHRoaXMudGltZSkuY29uY2F0KHBhcmFtKSk7CiAgICAgIHJldHVybiBlbmNyeXB0LmdldEhtYWM1MTIobmFtZUFQSSArIGhhc2gyNTYsIFNFUkNSRVRfS0VZKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRGdWxsSW5mbzEiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldEZ1bGxJbmZvMShpZCkgewogICAgICB2YXIgbmFtZUFQSSA9ICcvc29uZy9nZXQtc29uZy1kZXRhaWwnLAogICAgICAgICAgdHlwZUFwaSA9IDAsCiAgICAgICAgICBxcyA9IHsKICAgICAgICBpZDogaWQKICAgICAgfSwKICAgICAgICAgIHBhcmFtID0gJ2lkPScgKyBpZDsKICAgICAgdmFyIHNpZyA9IHRoaXMuaGFzaFBhcmFtKG5hbWVBUEksIHBhcmFtKTsKICAgICAgcmV0dXJuIHJlcXVlc3QoewogICAgICAgIHVyaTogVVJMX0FQSVt0eXBlQXBpXSArIG5hbWVBUEksCiAgICAgICAgcXM6IF9vYmplY3RTcHJlYWQoewogICAgICAgICAgY3RpbWU6IHRoaXMudGltZSwKICAgICAgICAgIHNpZzogc2lnCiAgICAgICAgfSwgcXMpCiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImdldFJhbmRvbUpva2UiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldFJhbmRvbUpva2UoKSB7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgdmFyIHJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsKICAgICAgICByZXF1ZXN0Lm9wZW4oJ0dFVCcsICdodHRwczovL3ppbmdtcDMudm4vYXBpL3NvbmcvZ2V0LXNvbmctZGV0YWlsP2FwaV9rZXk9MzhlODY0M2ZiMGRjMDRlOGQ2NWI5OTk5NGQzZGFmZmYmYXBpS2V5PTM4ZTg2NDNmYjBkYzA0ZThkNjViOTk5OTRkM2RhZmZmJmN0aW1lPTE2MDcxODczMTUmc2lnPTEyN2FjNGRjZGUzODg0YjE3OWMyZmUyOGFiY2NiZjY5NWMyMzFlMjVhMmZlODhjMDM4YWUwMjY2OThkNGRjMTRhYTYzZjkxZWFiMDc1ZTRiZWFlMmRiYTg4ZTdiMjNhNjNmZGQ5ZjY2MjZkNTcyZTg0ZDY5Y2E0YjdmM2JkYzYwJmlkPVpXRUlVQUlGJyk7CgogICAgICAgIHJlcXVlc3Qub25sb2FkID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgaWYgKHJlcXVlc3Quc3RhdHVzID09PSAyMDApIHsKICAgICAgICAgICAgcmVzb2x2ZShyZXF1ZXN0LnJlc3BvbnNlKTsgLy8gd2UgZ290IGRhdGEgaGVyZSwgc28gcmVzb2x2ZSB0aGUgUHJvbWlzZQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmVqZWN0KEVycm9yKHJlcXVlc3Quc3RhdHVzVGV4dCkpOyAvLyBzdGF0dXMgaXMgbm90IDIwMCBPSywgc28gcmVqZWN0CiAgICAgICAgICB9CiAgICAgICAgfTsKCiAgICAgICAgcmVxdWVzdC5vbmVycm9yID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgcmVqZWN0KEVycm9yKCdFcnJvciBmZXRjaGluZyBkYXRhLicpKTsgLy8gZXJyb3Igb2NjdXJyZWQsIHJlamVjdCB0aGUgIFByb21pc2UKICAgICAgICB9OwoKICAgICAgICByZXF1ZXN0LnNlbmQoKTsgLy8gc2VuZCB0aGUgcmVxdWVzdAogICAgICB9KTsKICAgIH0KICB9XSk7CgogIHJldHVybiBaaW5nTXAzOwp9KCk7Cgptb2R1bGUuZXhwb3J0cyA9IFppbmdNcDM7"},{"version":3,"sources":["E:/Project/AppZingMP3/vue-app-zing-mp3/src/assets/script/ZingMp3.js"],"names":["request","require","encrypt","API_KEY","SERCRET_KEY","URL_API","defaults","qs","api_key","apiKey","gzip","json","ZingMp3","nameAPI","typeApi","param","sig","hashParam","uri","ctime","time","Math","floor","Date","now","hash256","getHash256","getHmac512","id","Promise","resolve","reject","XMLHttpRequest","open","onload","status","response","Error","statusText","onerror","send","module","exports"],"mappings":"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","sourcesContent":["let request = require('request-promise');\nconst encrypt = require('./encrypt');\n\nconst API_KEY = '38e8643fb0dc04e8d65b99994d3dafff';\nconst SERCRET_KEY = '10a01dcf33762d3a204cb96429918ff6';\nconst URL_API = [\n    'https://zingmp3.vn/api',\n    'https://beta.zingmp3.vn'\n];\n\nrequest = request.defaults({\n    qs: {\n        api_key: API_KEY,\n        apiKey: API_KEY\n    },\n    gzip: true,\n    json: true\n});\n\nclass ZingMp3 {\n\n    // static getFullInfo(id){\n    //     return new Promise(async(resolve, reject) => {\n    //         try {\n    //             const data = await Promise.all([this.getSongInfo(id), this.getStreaming(id)]);\n    //             const infoSong = data[0].data;\n    //             let res = {\n    //                 id,\n    //                 title: infoSong.title,\n    //                 artists_names: infoSong.artists_names,\n    //                 thumbnail: infoSong.thumbnail_medium,\n    //                 lyric: infoSong.lyric,\n    //                 streaming: data[1].data\n    //             };\n    //             resolve(res);\n    //         } catch (error) {\n    //             reject(error);\n    //         }\n    //     });\n    // }\n\n    // static getInfoDetail(id) {\n    //     return new Promise(async (resolve, reject) => {\n    //         const option = {\n    //             nameAPI: '/song/get-song-detail',\n    //             typeApi: 0,\n    //             qs: {\n    //                 id\n    //             },\n    //             param: 'id=' + id\n    //         };\n\n    //         try {\n    //             const data = await this.requestZing(option);\n    //             if (data.err) reject(data);\n    //             resolve(data);\n    //         } catch (error) {\n    //             reject(error);\n    //         }\n    //     })\n    // }\n\n    // static getSongInfo(id) {\n    //     return new Promise(async (resolve, reject) => {\n\n    //         const option = {\n    //             nameAPI: '/song/get-song-info',\n    //             typeApi: 0,\n    //             qs: {\n    //                 id\n    //             },\n    //             param: 'id=' + id\n    //         };\n\n    //         try {\n    //             const data = await this.requestZing(option);\n    //             if (data.err) reject(data);\n    //             resolve(data);\n    //         } catch (error) {\n    //             reject(error);\n    //         }\n    //     })\n    // }\n\n    // static getStreaming(id) {\n    //     return new Promise(async (resolve, reject) => {\n\n    //         const option = {\n    //             nameAPI: '/api/v2/song/getStreaming',\n    //             typeApi: 1,\n    //             qs: {\n    //                 id\n    //             },\n    //             param: 'id=' + id\n    //         };\n\n    //         try {\n    //             const data = await this.requestZing(option);\n    //             if (data.err) reject(data);\n    //             resolve(data);\n    //         } catch (error) {\n    //             reject(error);\n    //         }\n    //     })\n    // }\n\n    static requestZing({nameAPI, typeApi, param, qs})\n    {\n        \n        let sig = this.hashParam(nameAPI, param);\n        return request({\n            uri: URL_API[typeApi] + nameAPI,\n            qs: {\n                ctime: this.time,\n                sig,\n                ...qs\n            }\n        });\n    }\n\n    static hashParam(nameAPI, param = '')\n    {\n        this.time = Math.floor(Date.now() / 1000);\n        const hash256 = encrypt.getHash256(`ctime=${this.time}${param}`);\n        return encrypt.getHmac512(nameAPI + hash256, SERCRET_KEY);\n    }\n\n    static getFullInfo1(id){\n        const \n            nameAPI = '/song/get-song-detail',\n            typeApi = 0,\n            qs = {\n                id\n            },\n            param = 'id=' + id;\n\n        let sig = this.hashParam(nameAPI, param);\n        return request({\n            uri: URL_API[typeApi] + nameAPI,\n            qs: {\n                ctime: this.time,\n                sig,\n                ...qs\n            }\n        });\n    }\n\n    static getRandomJoke(){\n        return new Promise((resolve, reject) => {\n          const request = new XMLHttpRequest();\n      \n          request.open('GET', 'https://zingmp3.vn/api/song/get-song-detail?api_key=38e8643fb0dc04e8d65b99994d3dafff&apiKey=38e8643fb0dc04e8d65b99994d3dafff&ctime=1607187315&sig=127ac4dcde3884b179c2fe28abccbf695c231e25a2fe88c038ae026698d4dc14aa63f91eab075e4beae2dba88e7b23a63fdd9f6626d572e84d69ca4b7f3bdc60&id=ZWEIUAIF');\n          request.onload = () => {\n            if (request.status === 200) {\n              resolve(request.response); // we got data here, so resolve the Promise\n            } else {\n              reject(Error(request.statusText)); // status is not 200 OK, so reject\n            }\n          };\n      \n          request.onerror = () => {\n            reject(Error('Error fetching data.')); // error occurred, reject the  Promise\n          };\n      \n          request.send(); // send the request\n        });\n      }\n}\n\nmodule.exports = ZingMp3;"]}]}